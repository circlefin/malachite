#cloud-config
manage_etc_hosts: false
apt:
  sources:
    source1:
      source: "deb https://download.docker.com/linux/debian $RELEASE stable"
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----

        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
        YT90qFF93M3v01BbxP+EIY2/9tiIPbrd
        =0YYh
        -----END PGP PUBLIC KEY BLOCK-----
package_update: true
packages:
  - git
  - gcc
  - prometheus
  - prometheus-node-exporter
  - ntpstat
  - jq
  - ufw
  - tmux
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  - docker-ce
  - docker-ce-cli
  - containerd.io
  - nfs-kernel-server
  - dnsmasq
  - pssh
  - rsync
write_files:
  - path: /etc/docker/daemon.json
    content: |
      {
        "insecure-registries" : ["0.0.0.0/0"]
      }
  - path: /etc/systemd/resolved.conf.d/1-dnsmasq.conf
    content: |
      [Resolve]
      DNS=127.0.0.1
      DNSStubListener=no
  - path: /etc/exports
    content: |
      /data 10.0.0.0/8(ro,sync,no_subtree_check)
      /data 172.16.0.0/12(ro,sync,no_subtree_check)
      /data 192.168.0.0/16(ro,sync,no_subtree_check)
      # (insecure) read-only access to the world
      /data 0.0.0.0/1(ro,sync,no_subtree_check,root_squash)
      /data 128.0.0.0/1(ro,sync,no_subtree_check,root_squash)
  - path: /etc/dnsmasq.d/servers.conf
    content: |
      server=1.0.0.1
      server=1.1.1.1
      bogus-priv
      expand-hosts
      domain=testnet
      cache-size=1000
      # (insecure) allow queries from the world
      interface=eth0
  - path: /etc/prometheus/prometheus.yml
    content: |
      global:
        scrape_interval: 0s500ms
        evaluation_interval: 10s
      scrape_configs:
        - job_name: 'malachite'
          static_configs:
            - targets: [
            'node0:9000',
            'node1:9000',
            'node2:9000',
            'node3:9000',
            'node4:9000',
            'node5:9000',
            'node6:9000',
            'node7:9000',
            'node8:9000',
            'node9:9000',
            'node10:9000',
            'node11:9000',
            'node12:9000',
            'node13:9000',
            'node14:9000',
            'node15:9000',
            'node16:9000',
            'node17:9000',
            'node18:9000',
            'node19:9000',
            'node20:9000',
            'node21:9000',
            'node22:9000',
            'node23:9000',
            'node24:9000',
            'node25:9000',
            'node26:9000',
            'node27:9000',
            'node28:9000',
            'node29:9000',
            'node30:9000',
            'node31:9000',
            'node32:9000',
            'node33:9000',
            'node34:9000',
            'node35:9000',
            'node36:9000',
            'node37:9000',
            'node38:9000',
            'node39:9000',
            'node40:9000',
            'node41:9000',
            'node42:9000',
            'node43:9000',
            'node44:9000',
            'node45:9000',
            'node46:9000',
            'node47:9000',
            'node48:9000',
            'node49:9000',
            'node50:9000',
            'node51:9000',
            'node52:9000',
            'node53:9000',
            'node54:9000',
            'node55:9000',
            'node56:9000',
            'node57:9000',
            'node58:9000',
            'node59:9000',
            'node60:9000',
            'node61:9000',
            'node62:9000',
            'node63:9000',
            'node64:9000',
            'node65:9000',
            'node66:9000',
            'node67:9000',
            'node68:9000',
            'node69:9000',
            'node70:9000',
            'node71:9000',
            'node72:9000',
            'node73:9000',
            'node74:9000',
            'node75:9000',
            'node76:9000',
            'node77:9000',
            'node78:9000',
            'node79:9000',
            'node80:9000',
            'node81:9000',
            'node82:9000',
            'node83:9000',
            'node84:9000',
            'node85:9000',
            'node86:9000',
            'node87:9000',
            'node88:9000',
            'node89:9000',
            'node90:9000',
            'node91:9000',
            'node92:9000',
            'node93:9000',
            'node94:9000',
            'node95:9000',
            'node96:9000',
            'node97:9000',
            'node98:9000',
            'node99:9000'
            ]
        - job_name: 'server'
          static_configs:
            - targets: [
            'node0:9100',
            'node1:9100',
            'node2:9100',
            'node3:9100',
            'node4:9100',
            'node5:9100',
            'node6:9100',
            'node7:9100',
            'node8:9100',
            'node9:9100',
            'node10:9100',
            'node11:9100',
            'node12:9100',
            'node13:9100',
            'node14:9100',
            'node15:9100',
            'node16:9100',
            'node17:9100',
            'node18:9100',
            'node19:9100',
            'node20:9100',
            'node21:9100',
            'node22:9100',
            'node23:9100',
            'node24:9100',
            'node25:9100',
            'node26:9100',
            'node27:9100',
            'node28:9100',
            'node29:9100',
            'node30:9100',
            'node31:9100',
            'node32:9100',
            'node33:9100',
            'node34:9100',
            'node35:9100',
            'node36:9100',
            'node37:9100',
            'node38:9100',
            'node39:9100',
            'node40:9100',
            'node41:9100',
            'node42:9100',
            'node43:9100',
            'node44:9100',
            'node45:9100',
            'node46:9100',
            'node47:9100',
            'node48:9100',
            'node49:9100',
            'node50:9100',
            'node51:9100',
            'node52:9100',
            'node53:9100',
            'node54:9100',
            'node55:9100',
            'node56:9100',
            'node57:9100',
            'node58:9100',
            'node59:9100',
            'node60:9100',
            'node61:9100',
            'node62:9100',
            'node63:9100',
            'node64:9100',
            'node65:9100',
            'node66:9100',
            'node67:9100',
            'node68:9100',
            'node69:9100',
            'node70:9100',
            'node71:9100',
            'node72:9100',
            'node73:9100',
            'node74:9100',
            'node75:9100',
            'node76:9100',
            'node77:9100',
            'node78:9100',
            'node79:9100',
            'node80:9100',
            'node81:9100',
            'node82:9100',
            'node83:9100',
            'node84:9100',
            'node85:9100',
            'node86:9100',
            'node87:9100',
            'node88:9100',
            'node89:9100',
            'node90:9100',
            'node91:9100',
            'node92:9100',
            'node93:9100',
            'node94:9100',
            'node95:9100',
            'node96:9100',
            'node97:9100',
            'node98:9100',
            'node99:9100'
            ]
  - path: /etc/nsswitch.conf
    content: |
      passwd:         files
      group:          files
      shadow:         files
      gshadow:        files
      hosts:          dns
      networks:       files
      protocols:      db files
      services:       db files
      ethers:         db files
      rpc:            db files
      netgroup:       nis
  - path: /root/docker/grafana.yml
    content: |
      apiVersion: 1
      datasources:
        - name: prometheus
          uid: prometheus
          type: prometheus
          url: http://host.docker.internal:9090
          is_default: true
          editable: true
  - path: /root/docker/malachite.yml
    content: |
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          updateIntervalSeconds: 10
          allowUiUpdates: true
          options:
            path: '/dashboards'
            foldersFromFilesStructure: true
  - path: /root/dashboards/main.json
    encoding: b64
    content: ${malachite_dashboard}
  - path: /root/docker/compose.yml
    content: |
      services:
        registry:
          container_name: registry
          image: registry:2
          ports:
            - 0.0.0.0:80:5000
          volumes:
            - registry:/var/lib/registry
          environment:
            REGISTRY_HTTP_SECRET: siSRSRTHSRTHSERGehrgjsoiejrg45625623452345isejrgisejrgsergserg
          restart: on-failure
        grafana:
          container_name: grafana
          image: grafana/grafana-oss
          volumes:
            - /root/docker/grafana.yml:/etc/grafana/provisioning/datasources/prometheus.yml
            - /root/docker/malachite.yml:/etc/grafana/provisioning/dashboards/malachite.yml
            - /root/dashboards:/dashboards
            - grafana:/var/lib/grafana
          ports:
            - 0.0.0.0:3000:3000
          environment:
            GF_SECURITY_ADMIN_USER: testnet
            GF_SECURITY_ADMIN_PASSWORD: militant-souvenir-dash-teleview
            GF_LOG_LEVEL: error
            GF_ANALYTICS_ENABLED: false
            GF_ANALYTICS_REPORTING_ENABLED: false
            GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: false
            GF_ANALYTICS_CHECK_FOR_UPDATES: false
            GF_ANALYTICS_FEEDBACK_LINKS_ENABLED: false
            GF_SECURITY_DISABLE_GRAVATAR: true
            GF_USERS_DEFAULT_THEME: system
            GF_USERS_EDITORS_CAN_ADMIN: true
            GF_AUTH_ANONYMOUS_ENABLED: true
            GF_AUTH_ANONYMOUS_ORG_ROLE: Editor
            GF_AUTH_BASIC_ENABLED: false
            GF_NEWS_NEWS_FEED_ENABLED: false
            GF_RENDERING_RENDERER_TOKEN: "-"
            GF_RENDERING_SERVER_URL: http://grafana-image-renderer:8081/render
            GF_RENDERING_CALLBACK_URL: http://grafana:3000/
            GF_LOG_FILTERS: rendering:debug
          extra_hosts:
            - "host.docker.internal:host-gateway"
        grafana-image-renderer:
          image: grafana/grafana-image-renderer
          container_name: grafana-image-renderer
      volumes:
        registry:
        grafana:
runcmd:
  - ln /usr/bin/parallel-ssh /usr/bin/pssh
  - mkdir /data
  - chown nobody:nogroup /data
  - systemctl daemon-reload
  - systemctl restart systemd-resolved
  - curl -s -o /root/dashboards/node-exporter-full.json -L https://raw.githubusercontent.com/rfmoz/grafana-dashboards/master/prometheus/node-exporter-full.json
  - systemctl enable prometheus-node-exporter
  - systemctl start prometheus-node-exporter
  - systemctl enable docker
  - systemctl start docker
  - systemctl enable nfs-kernel-server
  - systemctl start nfs-kernel-server
  - systemctl restart systemd-journald
  - systemctl restart dnsmasq
  - docker compose -f /root/docker/compose.yml up -d
  - curl -s -o /usr/bin/sconfig -L https://github.com/freshautomations/sconfig/releases/download/v0.2.0/sconfig_linux_amd64
  - chmod 755 /usr/bin/sconfig
  - date > /etc/done
  - ln /etc/done /etc/cc

