name: QA

on:
  workflow_dispatch:
  push:
    branches:
      - nenad/800-run-qa-from-git

jobs:
  run-rust-binary:
    runs-on: ubuntu-latest
    env:
      BINARY_NAME: informalsystems-malachitebft-starknet-app
      NODE_COUNT: 2

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0 

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply (Provision Nodes)
        working-directory: terraform
        run: |
          terraform apply -auto-approve \
            -var="do_token=${{ secrets.DO_TOKEN }}" \
            -var="do_ssh_fingerprint=${{ secrets.DO_SSH_FINGERPRINT }}" \
            -var="node_count=${{ env.NODE_COUNT }}"

      - name: Wait for Droplets Fully Initialize
        run: |
          sleep 30

      - name: Fetch Node IPs
        working-directory: terraform
        run: |
          sleep 30  # Allow Terraform to update state
          echo "Fetching node IPs..."
          
          # Explicitly capture only the Terraform output
          RAW_NODE_IPS=$(terraform output -json droplet_ips | tail -n +1)
          
          # Debug print to check output
          echo "Raw Node IPs: $RAW_NODE_IPS"
          
          # Ensure the JSON is correctly formatted
          NODE_IPS=$(echo "$RAW_NODE_IPS" | jq -c 'join(" ")' || echo "ERROR")
          
          if [ "$NODE_IPS" = "ERROR" ] || [ -z "$NODE_IPS" ]; then
            echo "Failed to parse node IPs! Exiting..."
            exit 1
          fi

          echo "Parsed Node IPs: $NODE_IPS"
          echo "NODE_IPS=$NODE_IPS" >> $GITHUB_ENV


      - name: Terraform Destroy (Cleanup Nodes)
        if: always()
        working-directory: terraform
        run: |
          terraform destroy -auto-approve \
            -var="do_token=${{ secrets.DO_TOKEN }}" \
            -var="do_ssh_fingerprint=${{ secrets.DO_SSH_FINGERPRINT }}"
